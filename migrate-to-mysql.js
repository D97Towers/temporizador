// Script para migrar datos de SQLite a MySQL
const mysqlDb = require('./mysql-database');
const sqliteDb = require('./database');

async function migrateData() {
  try {
    console.log('üîÑ Iniciando migraci√≥n de datos a MySQL...');
    
    // Inicializar MySQL
    const mysqlInitialized = await mysqlDb.initializeDatabase();
    if (!mysqlInitialized) {
      console.log('‚ùå No se pudo inicializar MySQL. Verifica las variables de entorno.');
      return;
    }
    
    // Migrar ni√±os
    console.log('üë∂ Migrando ni√±os...');
    const sqliteChildren = sqliteDb.children.getAll.all();
    for (const child of sqliteChildren) {
      try {
        await mysqlDb.children.create(
          child.name,
          child.nickname,
          child.father_name,
          child.mother_name,
          child.display_name,
          child.avatar,
          child.total_sessions,
          child.total_time_played
        );
        console.log(`   ‚úÖ ${child.name}`);
      } catch (error) {
        console.log(`   ‚ùå Error con ${child.name}:`, error.message);
      }
    }
    
    // Migrar juegos
    console.log('üéÆ Migrando juegos...');
    const sqliteGames = sqliteDb.games.getAll.all();
    for (const game of sqliteGames) {
      try {
        await mysqlDb.games.create(game.name);
        console.log(`   ‚úÖ ${game.name}`);
      } catch (error) {
        console.log(`   ‚ùå Error con ${game.name}:`, error.message);
      }
    }
    
    // Migrar sesiones
    console.log('üìÖ Migrando sesiones...');
    const sqliteSessions = sqliteDb.sessions.getAll.all();
    for (const session of sqliteSessions) {
      try {
        await mysqlDb.sessions.create(
          session.child_id,
          session.game_id,
          session.start_time,
          session.duration
        );
        console.log(`   ‚úÖ Sesi√≥n ${session.id}`);
      } catch (error) {
        console.log(`   ‚ùå Error con sesi√≥n ${session.id}:`, error.message);
      }
    }
    
    console.log('‚úÖ Migraci√≥n completada exitosamente!');
    
    // Verificar datos migrados
    const mysqlChildren = await mysqlDb.children.getAll();
    const mysqlGames = await mysqlDb.games.getAll();
    const mysqlSessions = await mysqlDb.sessions.getAll();
    
    console.log('üìä Resumen de migraci√≥n:');
    console.log(`   - Ni√±os: ${mysqlChildren.length}`);
    console.log(`   - Juegos: ${mysqlGames.length}`);
    console.log(`   - Sesiones: ${mysqlSessions.length}`);
    
  } catch (error) {
    console.error('‚ùå Error durante la migraci√≥n:', error);
  } finally {
    // Cerrar conexi√≥n MySQL
    if (mysqlDb.pool) {
      await mysqlDb.pool.end();
    }
  }
}

// Ejecutar migraci√≥n
migrateData();
